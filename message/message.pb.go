// Code generated by protoc-gen-go. DO NOT EDIT.
// source: message.proto

/*
Package message is a generated protocol buffer package.

It is generated from these files:
	message.proto

It has these top-level messages:
	LoginReq
	LoginResp
	HBReq
	HBResp
*/
package message

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type LoginReq struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *LoginReq) Reset()                    { *m = LoginReq{} }
func (m *LoginReq) String() string            { return proto.CompactTextString(m) }
func (*LoginReq) ProtoMessage()               {}
func (*LoginReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *LoginReq) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *LoginReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type LoginResp struct {
	Userid int32  `protobuf:"varint,1,opt,name=userid" json:"userid,omitempty"`
	Token  string `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
}

func (m *LoginResp) Reset()                    { *m = LoginResp{} }
func (m *LoginResp) String() string            { return proto.CompactTextString(m) }
func (*LoginResp) ProtoMessage()               {}
func (*LoginResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *LoginResp) GetUserid() int32 {
	if m != nil {
		return m.Userid
	}
	return 0
}

func (m *LoginResp) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type HBReq struct {
	Userid int32 `protobuf:"varint,1,opt,name=userid" json:"userid,omitempty"`
}

func (m *HBReq) Reset()                    { *m = HBReq{} }
func (m *HBReq) String() string            { return proto.CompactTextString(m) }
func (*HBReq) ProtoMessage()               {}
func (*HBReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *HBReq) GetUserid() int32 {
	if m != nil {
		return m.Userid
	}
	return 0
}

type HBResp struct {
}

func (m *HBResp) Reset()                    { *m = HBResp{} }
func (m *HBResp) String() string            { return proto.CompactTextString(m) }
func (*HBResp) ProtoMessage()               {}
func (*HBResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func init() {
	proto.RegisterType((*LoginReq)(nil), "LoginReq")
	proto.RegisterType((*LoginResp)(nil), "LoginResp")
	proto.RegisterType((*HBReq)(nil), "HBReq")
	proto.RegisterType((*HBResp)(nil), "HBResp")
}

func init() { proto.RegisterFile("message.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 146 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcd, 0x4d, 0x2d, 0x2e,
	0x4e, 0x4c, 0x4f, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x72, 0xe2, 0xe2, 0xf0, 0xc9, 0x4f,
	0xcf, 0xcc, 0x0b, 0x4a, 0x2d, 0x14, 0x92, 0xe2, 0xe2, 0x28, 0x2d, 0x4e, 0x2d, 0xca, 0x4b, 0xcc,
	0x4d, 0x95, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x82, 0xf3, 0x41, 0x72, 0x05, 0x89, 0xc5, 0xc5,
	0xe5, 0xf9, 0x45, 0x29, 0x12, 0x4c, 0x10, 0x39, 0x18, 0x5f, 0xc9, 0x92, 0x8b, 0x13, 0x6a, 0x46,
	0x71, 0x81, 0x90, 0x18, 0x17, 0x1b, 0x48, 0x53, 0x66, 0x0a, 0xd8, 0x08, 0xd6, 0x20, 0x28, 0x4f,
	0x48, 0x84, 0x8b, 0xb5, 0x24, 0x3f, 0x3b, 0x35, 0x0f, 0xaa, 0x1b, 0xc2, 0x51, 0x92, 0xe7, 0x62,
	0xf5, 0x70, 0x02, 0xd9, 0x8d, 0x43, 0x9b, 0x12, 0x07, 0x17, 0x1b, 0x48, 0x41, 0x71, 0x41, 0x12,
	0x1b, 0xd8, 0xc1, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x41, 0xf1, 0x9b, 0xe0, 0xc1, 0x00,
	0x00, 0x00,
}
